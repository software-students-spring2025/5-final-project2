name: Frontend CI/CD
 
 on:
   push:
     branches: [ main, master ]
     paths:
       - 'frontend/**'
   pull_request:
     branches: [ main, master ]
     paths:
       - 'frontend/**'
   workflow_dispatch:
 
 jobs:
   test:
     name: Test & Coverage
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
 
       - name: Set up Python
         uses: actions/setup-python@v2
         with:
           python-version: '3.9'
 
       - name: Install dependencies
         run: |
           cd frontend
           python -m pip install --upgrade pip
           pip install -r requirements.txt
           pip install pytest pytest-cov
 
       - name: Run frontend tests with coverage
         env:
           MONGO_URI: "mongodb://localhost:27017"
           DB_NAME: "test_db"
         run: |
           cd frontend
           pytest --cov=frontend.app --cov-report=xml
 
       - name: Check coverage threshold
         run: |
           cd frontend
           coverage report --fail-under=80
           
   build_and_deploy:
     name: Build & Deploy
     needs: test
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
 
       - name: Log in to Docker Hub
         uses: docker/login-action@v1
         with:
           username: ${{ secrets.DOCKER_HUB_USERNAME }}
           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
 
       - name: Build and push Docker image
         uses: docker/build-push-action@v2
         with:
           context: ./frontend
           push: true
           tags: |
             ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:${{ github.sha }}
             ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest
 
       - name: Deploy to Digital Ocean
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.DIGITALOCEAN_HOST }}
           username: ${{ secrets.DIGITALOCEAN_USERNAME }}
           key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
           script: |
             docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest
             docker stop frontend-container || true
             docker rm frontend-container || true
             docker run -d --name frontend-container -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest
