name: AI Backend CI/CD

on:
  push:
    branches: [ main, master ]
    paths:
      - 'ai_backend/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'ai_backend/**'
  workflow_dispatch: 

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          cd ai_backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pip install pytest-mock

      - name: Run AI backend tests with coverage
        run: |
          cd ai_backend
          pytest --cov=. --cov-report=xml

      - name: Check coverage threshold
        run: |
          cd ai_backend
          coverage report --fail-under=80

  build_and_deploy:
    name: Build & Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./ai_backend
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/project-ai-backend:${{ github.sha }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/project-ai-backend:latest
          build-args: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/project-ai-backend:latest
            docker stop ai-backend-container || true
            docker rm ai-backend-container || true
            docker run -d --name ai-backend-container -p 5000:5000 -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" ${{ secrets.DOCKER_HUB_USERNAME }}/project-ai-backend:latest
